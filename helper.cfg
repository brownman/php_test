export MODE_VERBOSE=true

trap_exit(){
    print_color 33 "$FUNCNAME"
    $str_caller

}
trap_err(){
    print_color 31 "$FUNCNAME"
    $str_caller
    exit 0
}

cat1(){
    local file=$1
    test -f $file || { print_color 31 file not found: $file; exiting; }
    print_color 34  "[ $file ] "
    echo ~~~~~~~~~~~~
    cat -n $file 
    print_line 
}

print_color_n () 
{ 
    if [ $# -gt 1 ]; then
        local color=$1;
        shift;
        local args="${@:-}";
        echo -en "\x1B[01;${color}m[*]\x1B[0m ${args} " 1>&2;
    fi
}
indicator(){
    local num=$1
    if [ $num -ne 0 ];then
        print_color_n 31 ''
        #[x]'
    else
        print_color_n 32 ''
        #[v]'
    fi
    echo 1>&2
}


exiting(){
    print_color 31 exiting

    $str_caller
}

print_color(){
    print_color_n $@
    echo
}
print_line(){
    echo 1>&2 --------
}


show_funcs(){
    echo Options:
    echo  =-=-=-=-=--
    nl < <( cat $0 | grep '(){' | grep -v grep | sed 's/(){//g' )
}
commander(){
    set -e
    local args=( $@ )
    local cmd="${args[@]}"
    local res=1
    print_line
    print_color_n  33  "[CMD] "
        print_color 34 "$cmd"
    print_line

    if [ "$MODE_VERBOSE"  = true ];then

    #sleep 2
        #echo "$cmd" | pv -qL 10
        eval "$cmd"
    else


        eval "$cmd" 1>/tmp/out 2>/tmp/err 
        #|| { cat1 /tmp/err; exiting; }
    fi

    res=$?
    indicator "$res"
    return $res
}
commander1(){
    commander $@  #|| exiting
}
export -f exiting
export -f commander1
export -f trap_err
export -f trap_exit
export str_caller='eval echo $(caller)'
export cmd_trap_err='trap trap_err ERR'
export cmd_trap_exit='trap trap_exit EXIT'


